// Code generated by mockery v2.33.2. DO NOT EDIT.

package mocks

import (
	domain "robinhood/domain"

	mock "github.com/stretchr/testify/mock"
)

// UserProfileRepo is an autogenerated mock type for the UserProfileRepo type
type UserProfileRepo struct {
	mock.Mock
}

// GetUserById provides a mock function with given fields: id
func (_m *UserProfileRepo) GetUserById(id string) (*domain.UseProfile, error) {
	ret := _m.Called(id)

	var r0 *domain.UseProfile
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*domain.UseProfile, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) *domain.UseProfile); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.UseProfile)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveUser provides a mock function with given fields: userprofile
func (_m *UserProfileRepo) SaveUser(userprofile *domain.UseProfile) error {
	ret := _m.Called(userprofile)

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.UseProfile) error); ok {
		r0 = rf(userprofile)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewUserProfileRepo creates a new instance of UserProfileRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewUserProfileRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *UserProfileRepo {
	mock := &UserProfileRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
